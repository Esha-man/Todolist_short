{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Todo/AddTodo.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","marginBottom","input","marginRight","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","className","join","type","checked","id","title","onClick","bind","ul","listStyle","margin","TodoList","props","todos","map","onToggle","form","button","AddTodo","onCreate","useState","value","setValue","onSubmit","event","preventDefault","trim","target","App","setTodos","Provider","filter","concat","Date","now","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97338d8c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;","import React, {useContext} from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport Context from \"../context\";\r\n\r\n\r\n\r\nconst styles = {\r\n    li: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        padding: \".5rem 1rem\",\r\n        border: \"1px solid #ccc\",\r\n        /*borderRadius: \"4px\",*/\r\n        marginBottom: \".5rem\"\r\n    },\r\n    input: {\r\n        marginRight: \"1rem\",\r\n    }\r\n}\r\n//todo - это props\r\nfunction TodoItem({todo, index, onChange}) {\r\n    const {removeTodo} = useContext(Context);\r\n    const classes = [];\r\n    if (todo.completed) {\r\n        classes.push(\"done\");\r\n    }\r\n    return (\r\n        <li style={styles.li}>\r\n            <span className={classes.join(\" \")}>\r\n                <input type=\"checkbox\"\r\n                       checked={todo.completed}\r\n                       style={styles.input}\r\n                       onChange={() => onChange(todo.id)}/>\r\n                <strong>{index + 1 + \".\"}</strong>\r\n                &nbsp;\r\n                {todo.title}\r\n            </span>\r\n            <button onClick={removeTodo.bind(null, todo.id)}\r\n                    className={\"rm\"}>&times;</button>\r\n        </li>\r\n    );\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n    onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TodoItem;","import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport TodoItem from \"./TodoItem\";\r\n\r\n\r\nconst styles = {\r\n    ul: {\r\n        listStyle: \"none\",\r\n        margin: 0,\r\n        padding: 0,\r\n    }\r\n}\r\n\r\nfunction TodoList(props) {\r\n    return (\r\n        <ul style={styles.ul}>\r\n            {props.todos.map((todo, index) => {\r\n                return <TodoItem todo={todo}\r\n                                 key={todo.id}\r\n                                 index={index}\r\n                                 onChange={props.onToggle}/>\r\n            })}\r\n        </ul>\r\n    );\r\n}\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onToggle: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default TodoList;","import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst styles = {\r\n    form: {\r\n        padding: \"5px 5px 5px 0px\",\r\n        margin: \"5px 5px 5px 0px\",\r\n    },\r\n    button: {\r\n        margin: \"0px 0px 0px 5px\",\r\n        padding: \"0px 0px 0px 5px\",\r\n    },\r\n}\r\n\r\n\r\n\r\nfunction AddTodo({onCreate}) {\r\n    const [value, setValue] = React.useState(\"\");\r\n\r\n    function submitHandler(event) {\r\n        event.preventDefault()\r\n        if (value.trim()) {\r\n            onCreate(value)\r\n            setValue(\"\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form style={styles.form} onSubmit={submitHandler}>\r\n            <input type=\"text\" value={value} onChange={event => setValue(event.target.value)}/>\r\n            <button style={styles.button} type=\"submit\">Добавить</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nAddTodo.propTypes = {\r\n    onCreate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddTodo;","import React from \"react\";\r\nimport TodoList from \"./Todo/TodoList\";\r\nimport Context from \"./context\";\r\nimport AddTodo from \"./Todo/AddTodo\";\r\n\r\nfunction App() {\r\n        const [todos, setTodos] = React.useState([\r\n            {id: 1, completed: false, title: \"Купи хлеб\"},\r\n            {id: 2, completed: false, title: \"Купи молоко\"},\r\n            {id: 3, completed: false, title: \"Купи зефир\"},\r\n        ]);\r\n\r\n\r\n    function toggleTodo(id) {\r\n        setTodos(\r\n            todos.map(todo => {\r\n            if(todo.id === id) {\r\n                todo.completed = !todo.completed;\r\n            }\r\n            return todo;\r\n        }))\r\n    }\r\n\r\n    function removeTodo(id) {\r\n        setTodos(todos.filter(todo => todo.id !== id));\r\n    }\r\n\r\n    function addTodo(title) {\r\n        setTodos(todos.concat([{\r\n            title: title,\r\n            id: Date.now(),\r\n            completed: false,\r\n        }]))\r\n    }\r\n\r\n    return (\r\n            <Context.Provider value={{removeTodo: removeTodo}}>\r\n                <div className=\"wrapper\">\r\n                    <h1>Список дел</h1>\r\n                    <AddTodo onCreate={addTodo}/>\r\n                    {todos.length ? <TodoList todos={todos} onToggle={toggleTodo}/> : <p>Нет задач на сегодня</p>}\r\n                </div>\r\n            </Context.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}